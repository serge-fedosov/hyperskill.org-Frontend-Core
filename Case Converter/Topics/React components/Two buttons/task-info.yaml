type: edu
files:
- name: test/test.js
  visible: false
  text: |
    const puppeteer = require('puppeteer');
    const path = require('path');

    const hs = require('hs-test-web');
    const react = require('hs-test-web-server');

    const sleep = (ms) => new Promise(res => setTimeout(res, ms));

    async function stageTest() {
      const browser = await puppeteer.launch({
        headless: false,
        defaultViewport: null,
        args:['--start-maximized', '--disable-infobar'],
        ignoreDefaultArgs: ['--enable-automation'],
      });

      const page = await browser.newPage();
      await page.goto('http://localhost:3010');

      page.on('console', msg => console.log(msg.text()));

      let result = await hs.testPage(page,
        // Test #1
        () => {
          if (document.getElementById('root').childNodes[0].tagName !== 'DIV') {
            return hs.wrong('The parent element inside the function App should be a "div".');
          }

          if (!document.querySelector('.main')) {
            return hs.wrong('Your App should contain a div with the class main.');
          }

          return hs.correct();
        },
        // Test #2
        () => {
          if (document.querySelector('.main').childNodes.length !== 3) {
            return hs.wrong('Your div must have three elements inside.');
          }

          return hs.correct();
        },
        // Test #3
        () => {
          const children = Array.from(document.querySelector('.main').childNodes);
          const buttons = children.filter(item => item.tagName === 'BUTTON');
          const heading = children.filter(item => item.tagName === 'H1');

          if (buttons.length !== 2) {
            return hs.wrong('There should be two buttons elements inside the div.');
          }

          if (heading.length !== 1) {
            return hs.wrong('There should be one h1 element inside the div.');
          }

          return hs.correct();
        },
        // Test #4
        () => {
          const children = Array.from(document.querySelector('.main').childNodes);
          if (children.some(item => item.textContent === '')) {
            return hs.wrong('All three elements should have a text');
          }

          return hs.correct();
        }
      );

      await sleep(15000);
      await browser.close();
      return result;
    }

    jest.setTimeout(30000);
    test("Test stage", async () => {
      let result = await react.startServerAndTest(
        'localhost', 3010, path.resolve(__dirname, '..'), stageTest
      );

      if (result['type'] !== 'correct') {
        throw new Error(result['message']);
      }
    });
  learner_created: false
- name: src/App.js
  visible: true
  text: |
    import React from 'react';

    const App = () => (
      <div className="main">
      </div>
    );

    // Don't delete the line below
    export default App;
  learner_created: false
- name: src/index.js
  visible: true
  text: |
    import React from "react";
    import ReactDOM from "react-dom"
    import App from "./App";

    ReactDOM.render(
      <App />,
      document.getElementById('root')
    );
  learner_created: false
feedback_link: https://hyperskill.org/learn/step/16926#comment
status: Failed
feedback:
  message: |2
      ● Test suite failed to run

        Cannot find module 'mocha/package.json' from 'node_modules/hs-test-web/dist/hstest/outcome/unexpectedErrorOutcome.js'

        Require stack:
          node_modules/hs-test-web/dist/hstest/outcome/unexpectedErrorOutcome.js
          node_modules/hs-test-web/dist/hstest/outcome/outcomeFactory.js
          node_modules/hs-test-web/dist/hstest/stage/stageTest.js
          node_modules/hs-test-web/dist/hstest/index.js
          Topics/React components/Two buttons/test/test.js

          2 | const path = require('path');
          3 |
        > 4 | const hs = require('hs-test-web');
            |            ^
          5 | const react = require('hs-test-web-server');
          6 |
          7 | const sleep = (ms) => new Promise(res => setTimeout(res, ms));

          at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:487:11)
          at Object.<anonymous> (node_modules/hs-test-web/hstest/outcome/unexpectedErrorOutcome.ts:6:1)
          at Object.<anonymous> (node_modules/hs-test-web/hstest/outcome/outcomeFactory.ts:4:1)
          at Object.<anonymous> (node_modules/hs-test-web/hstest/stage/stageTest.ts:9:1)
          at Object.<anonymous> (node_modules/hs-test-web/hstest/index.ts:1:1)
          at Object.require (Topics/React components/Two buttons/test/test.js:4:12)
  time: Sun, 02 Oct 2022 08:07:02 UTC
record: -1
